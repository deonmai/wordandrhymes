{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deonm\\\\Documents\\\\UNI\\\\React\\\\random-word-gen\\\\src\\\\components\\\\Rhymes.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rhymes = props => {\n  return (\n    /*#__PURE__*/\n    // <h2 className = {props.class}>{props.rhymes[0]} &emsp; {props.rhymes[1]} &emsp; {props.rhymes[2]} </h2>\n    _jsxDEV(\"h2\", {\n      className: props.class,\n      children: props.rhymes.map((item, index) => {\n        if (index != props.rhymes.length - 1) {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [item, \"\\u2003\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 9,\n            columnNumber: 16\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 14\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = Rhymes;\nexport default Rhymes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rhymes\");","map":{"version":3,"sources":["C:/Users/deonm/Documents/UNI/React/random-word-gen/src/components/Rhymes.js"],"names":["React","Rhymes","props","class","rhymes","map","item","index","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAExB;AAAA;AACE;AACA;AAAI,MAAA,SAAS,EAAKA,KAAK,CAACC,KAAxB;AAAA,gBAAgCD,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChE,YAAGA,KAAK,IAAIL,KAAK,CAACE,MAAN,CAAaI,MAAb,GAAsB,CAAlC,EAAqC;AACnC,8BAAO;AAAA,uBAAqBF,IAArB;AAAA,aAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;;AACD,4BAAO;AAAA,oBAAqBD;AAArB,WAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAL+B;AAAhC;AAAA;AAAA;AAAA;AAAA;AAFF;AASD,CAXD;;KAAMN,M;AAaN,eAAeA,MAAf","sourcesContent":["import React from 'react'\r\n\r\nconst Rhymes = (props) => {\r\n\r\n  return(\r\n    // <h2 className = {props.class}>{props.rhymes[0]} &emsp; {props.rhymes[1]} &emsp; {props.rhymes[2]} </h2>\r\n    <h2 className = { props.class}>{props.rhymes.map((item, index) => {\r\n      if(index != props.rhymes.length - 1) {\r\n        return <span key = {index}>{item}&emsp;</span>\r\n      }\r\n      return <span key = {index}>{item}</span>\r\n    })}</h2>\r\n  );\r\n}\r\n\r\nexport default Rhymes\r\n"]},"metadata":{},"sourceType":"module"}