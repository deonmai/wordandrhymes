{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.load = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar options_1 = tslib_1.__importStar(require(\"./options\"));\n\nvar staticMethods = tslib_1.__importStar(require(\"./static\"));\n\nvar cheerio_1 = require(\"./cheerio\");\n\nvar parse_1 = tslib_1.__importDefault(require(\"./parse\"));\n/**\n * Create a querying function, bound to a document created from the provided\n * markup. Note that similar to web browser contexts, this operation may\n * introduce `<html>`, `<head>`, and `<body>` elements; set `isDocument` to\n * `false` to switch to fragment mode and disable this.\n *\n * @param content - Markup to be loaded.\n * @param options - Options for the created instance.\n * @param isDocument - Allows parser to be switched to fragment mode.\n * @returns The loaded document.\n * @see {@link https://cheerio.js.org#loading} for additional usage information.\n */\n\n\nfunction load(content, options, isDocument) {\n  if (isDocument === void 0) {\n    isDocument = true;\n  }\n\n  if (content == null) {\n    throw new Error('cheerio.load() expects a string');\n  }\n\n  var internalOpts = tslib_1.__assign(tslib_1.__assign({}, options_1.default), options_1.flatten(options));\n\n  var root = parse_1.default(content, internalOpts, isDocument);\n  /** Create an extended class here, so that extensions only live on one instance. */\n\n  var LoadedCheerio = function (_super) {\n    tslib_1.__extends(LoadedCheerio, _super);\n\n    function LoadedCheerio() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    return LoadedCheerio;\n  }(cheerio_1.Cheerio);\n\n  function initialize(selector, context, r, opts) {\n    if (r === void 0) {\n      r = root;\n    }\n\n    return new LoadedCheerio(selector, context, r, tslib_1.__assign(tslib_1.__assign({}, internalOpts), options_1.flatten(opts)));\n  } // Add in static methods & properties\n\n\n  Object.assign(initialize, staticMethods, {\n    load: load,\n    // `_root` and `_options` are used in static methods.\n    _root: root,\n    _options: internalOpts,\n    // Add `fn` for plugins\n    fn: LoadedCheerio.prototype,\n    // Add the prototype here to maintain `instanceof` behavior.\n    prototype: LoadedCheerio.prototype\n  });\n  return initialize;\n}\n\nexports.load = load;","map":{"version":3,"sources":["C:/Users/deonm/Documents/UNI/React/random-word-gen/node_modules/cheerio/lib/load.js"],"names":["Object","defineProperty","exports","value","load","tslib_1","require","options_1","__importStar","staticMethods","cheerio_1","parse_1","__importDefault","content","options","isDocument","Error","internalOpts","__assign","default","flatten","root","LoadedCheerio","_super","__extends","apply","arguments","Cheerio","initialize","selector","context","r","opts","assign","_root","_options","fn","prototype"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,IAAR,GAAe,KAAK,CAApB;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAIC,SAAS,GAAGF,OAAO,CAACG,YAAR,CAAqBF,OAAO,CAAC,WAAD,CAA5B,CAAhB;;AACA,IAAIG,aAAa,GAAGJ,OAAO,CAACG,YAAR,CAAqBF,OAAO,CAAC,UAAD,CAA5B,CAApB;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAIK,OAAO,GAAGN,OAAO,CAACO,eAAR,CAAwBN,OAAO,CAAC,SAAD,CAA/B,CAAd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,IAAT,CAAcS,OAAd,EAAuBC,OAAvB,EAAgCC,UAAhC,EAA4C;AACxC,MAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AAAEA,IAAAA,UAAU,GAAG,IAAb;AAAoB;;AACjD,MAAIF,OAAO,IAAI,IAAf,EAAqB;AACjB,UAAM,IAAIG,KAAJ,CAAU,iCAAV,CAAN;AACH;;AACD,MAAIC,YAAY,GAAGZ,OAAO,CAACa,QAAR,CAAiBb,OAAO,CAACa,QAAR,CAAiB,EAAjB,EAAqBX,SAAS,CAACY,OAA/B,CAAjB,EAA0DZ,SAAS,CAACa,OAAV,CAAkBN,OAAlB,CAA1D,CAAnB;;AACA,MAAIO,IAAI,GAAGV,OAAO,CAACQ,OAAR,CAAgBN,OAAhB,EAAyBI,YAAzB,EAAuCF,UAAvC,CAAX;AACA;;AACA,MAAIO,aAAa,GAAkB,UAAUC,MAAV,EAAkB;AACjDlB,IAAAA,OAAO,CAACmB,SAAR,CAAkBF,aAAlB,EAAiCC,MAAjC;;AACA,aAASD,aAAT,GAAyB;AACrB,aAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACD,WAAOJ,aAAP;AACH,GANkC,CAMjCZ,SAAS,CAACiB,OANuB,CAAnC;;AAOA,WAASC,UAAT,CAAoBC,QAApB,EAA8BC,OAA9B,EAAuCC,CAAvC,EAA0CC,IAA1C,EAAgD;AAC5C,QAAID,CAAC,KAAK,KAAK,CAAf,EAAkB;AAAEA,MAAAA,CAAC,GAAGV,IAAJ;AAAW;;AAC/B,WAAO,IAAIC,aAAJ,CAAkBO,QAAlB,EAA4BC,OAA5B,EAAqCC,CAArC,EAAwC1B,OAAO,CAACa,QAAR,CAAiBb,OAAO,CAACa,QAAR,CAAiB,EAAjB,EAAqBD,YAArB,CAAjB,EAAqDV,SAAS,CAACa,OAAV,CAAkBY,IAAlB,CAArD,CAAxC,CAAP;AACH,GAlBuC,CAmBxC;;;AACAhC,EAAAA,MAAM,CAACiC,MAAP,CAAcL,UAAd,EAA0BnB,aAA1B,EAAyC;AACrCL,IAAAA,IAAI,EAAEA,IAD+B;AAErC;AACA8B,IAAAA,KAAK,EAAEb,IAH8B;AAIrCc,IAAAA,QAAQ,EAAElB,YAJ2B;AAKrC;AACAmB,IAAAA,EAAE,EAAEd,aAAa,CAACe,SANmB;AAOrC;AACAA,IAAAA,SAAS,EAAEf,aAAa,CAACe;AARY,GAAzC;AAUA,SAAOT,UAAP;AACH;;AACD1B,OAAO,CAACE,IAAR,GAAeA,IAAf","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.load = void 0;\nvar tslib_1 = require(\"tslib\");\nvar options_1 = tslib_1.__importStar(require(\"./options\"));\nvar staticMethods = tslib_1.__importStar(require(\"./static\"));\nvar cheerio_1 = require(\"./cheerio\");\nvar parse_1 = tslib_1.__importDefault(require(\"./parse\"));\n/**\n * Create a querying function, bound to a document created from the provided\n * markup. Note that similar to web browser contexts, this operation may\n * introduce `<html>`, `<head>`, and `<body>` elements; set `isDocument` to\n * `false` to switch to fragment mode and disable this.\n *\n * @param content - Markup to be loaded.\n * @param options - Options for the created instance.\n * @param isDocument - Allows parser to be switched to fragment mode.\n * @returns The loaded document.\n * @see {@link https://cheerio.js.org#loading} for additional usage information.\n */\nfunction load(content, options, isDocument) {\n    if (isDocument === void 0) { isDocument = true; }\n    if (content == null) {\n        throw new Error('cheerio.load() expects a string');\n    }\n    var internalOpts = tslib_1.__assign(tslib_1.__assign({}, options_1.default), options_1.flatten(options));\n    var root = parse_1.default(content, internalOpts, isDocument);\n    /** Create an extended class here, so that extensions only live on one instance. */\n    var LoadedCheerio = /** @class */ (function (_super) {\n        tslib_1.__extends(LoadedCheerio, _super);\n        function LoadedCheerio() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return LoadedCheerio;\n    }(cheerio_1.Cheerio));\n    function initialize(selector, context, r, opts) {\n        if (r === void 0) { r = root; }\n        return new LoadedCheerio(selector, context, r, tslib_1.__assign(tslib_1.__assign({}, internalOpts), options_1.flatten(opts)));\n    }\n    // Add in static methods & properties\n    Object.assign(initialize, staticMethods, {\n        load: load,\n        // `_root` and `_options` are used in static methods.\n        _root: root,\n        _options: internalOpts,\n        // Add `fn` for plugins\n        fn: LoadedCheerio.prototype,\n        // Add the prototype here to maintain `instanceof` behavior.\n        prototype: LoadedCheerio.prototype,\n    });\n    return initialize;\n}\nexports.load = load;\n"]},"metadata":{},"sourceType":"script"}