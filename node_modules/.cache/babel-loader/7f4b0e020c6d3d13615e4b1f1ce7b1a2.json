{"ast":null,"code":"var _regeneratorRuntime = require(\"C:/Users/deonm/Documents/UNI/React/random-word-gen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/Users/deonm/Documents/UNI/React/random-word-gen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar fetch = require('node-fetch');\n\nvar cheerio = require('cheerio');\n\nvar getRhymes = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(word) {\n    var url, html, $, words;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = \"http://www.b-rhymes.com/rhyme/word/\".concat(word);\n            _context.next = 3;\n            return fetch(url).then(function (res) {\n              return res.text();\n            });\n\n          case 3:\n            html = _context.sent;\n            $ = cheerio.load(html);\n            words = $('.rhyme-table .word').map(function (i, el) {\n              return $(el).text().trim();\n            }).get(); // convert to vanilla array\n\n            return _context.abrupt(\"return\", words);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getRhymes(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = getRhymes;","map":{"version":3,"sources":["C:/Users/deonm/Documents/UNI/React/random-word-gen/node_modules/get-rhymes/src/b-rhymes.js"],"names":["fetch","require","cheerio","getRhymes","word","url","then","res","text","html","$","load","words","map","i","el","trim","get","module","exports"],"mappings":";;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAArB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAME,SAAS;AAAA,sEAAG,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,GADU,gDACkCD,IADlC;AAAA;AAAA,mBAEGJ,KAAK,CAACK,GAAD,CAAL,CAAWC,IAAX,CAAgB,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,aAAnB,CAFH;;AAAA;AAEVC,YAAAA,IAFU;AAGVC,YAAAA,CAHU,GAGNR,OAAO,CAACS,IAAR,CAAaF,IAAb,CAHM;AAIVG,YAAAA,KAJU,GAIFF,CAAC,CAAC,oBAAD,CAAD,CACXG,GADW,CACP,UAACC,CAAD,EAAIC,EAAJ;AAAA,qBACHL,CAAC,CAACK,EAAD,CAAD,CACGP,IADH,GAEGQ,IAFH,EADG;AAAA,aADO,EAMXC,GANW,EAJE,EAUP;;AAVO,6CAWTL,KAXS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATT,SAAS;AAAA;AAAA;AAAA,GAAf;;AAcAe,MAAM,CAACC,OAAP,GAAiBhB,SAAjB","sourcesContent":["const fetch = require('node-fetch')\nconst cheerio = require('cheerio')\n\nconst getRhymes = async word => {\n  const url = `http://www.b-rhymes.com/rhyme/word/${word}`\n  const html = await fetch(url).then(res => res.text())\n  const $ = cheerio.load(html)\n  const words = $('.rhyme-table .word')\n    .map((i, el) =>\n      $(el)\n        .text()\n        .trim()\n    )\n    .get() // convert to vanilla array\n  return words\n}\n\nmodule.exports = getRhymes\n"]},"metadata":{},"sourceType":"script"}