{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst node_fetch_1 = require(\"node-fetch\");\n\nconst cheerio = require(\"cheerio\");\n\nclass Util {\n  constructor() {\n    throw new Error(`The ${this.constructor.name} class may not be instantiated!`);\n  }\n  /**\r\n   * Parse html of the given url\r\n   * @param url Website url to parse html from\r\n   */\n\n\n  static getHTML(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (typeof url !== \"string\") throw new Error(`The url type must be a string, received \"${typeof url}\"!`);\n\n      try {\n        const res = yield node_fetch_1.default(url, {\n          redirect: \"manual\"\n        });\n        if (res.status !== 200) return \"\";\n        const html = yield res.text();\n        return html;\n      } catch (e) {\n        return \"\";\n      }\n    });\n  }\n  /**\r\n   * Loads HTML\r\n   * @param html Raw html to load\r\n   */\n\n\n  static loadHTML(html) {\n    if (typeof html !== \"string\") throw new Error(`The html type must be a string, received \"${typeof html}\"!`);\n    return cheerio.load(html);\n  }\n\n}\n\nexports.default = Util;","map":{"version":3,"sources":["C:/Users/deonm/Documents/UNI/React/random-word-gen/node_modules/camb-dict/lib/Util/Util.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","node_fetch_1","require","cheerio","Util","constructor","Error","name","getHTML","url","res","default","redirect","status","html","text","loadHTML","load"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAASC,KAAT,CAAeC,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACD,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASC,QAAT,CAAkBR,KAAlB,EAAyB;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;AAAsF;;AAC9GH,IAAAA,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAV,CAAgBjB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASAO,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEf,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMgB,YAAY,GAAGC,OAAO,CAAC,YAAD,CAA5B;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAME,IAAN,CAAW;AACPC,EAAAA,WAAW,GAAG;AACV,UAAM,IAAIC,KAAJ,CAAW,OAAM,KAAKD,WAAL,CAAiBE,IAAK,iCAAvC,CAAN;AACH;AACD;AACJ;AACA;AACA;;;AACkB,SAAPC,OAAO,CAACC,GAAD,EAAM;AAChB,WAAO9B,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,UAAI,OAAO8B,GAAP,KAAe,QAAnB,EACI,MAAM,IAAIH,KAAJ,CAAW,4CAA2C,OAAOG,GAAI,IAAjE,CAAN;;AACJ,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMT,YAAY,CAACU,OAAb,CAAqBF,GAArB,EAA0B;AAAEG,UAAAA,QAAQ,EAAE;AAAZ,SAA1B,CAAlB;AACA,YAAIF,GAAG,CAACG,MAAJ,KAAe,GAAnB,EACI,OAAO,EAAP;AACJ,cAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AACA,eAAOD,IAAP;AACH,OAND,CAOA,OAAOtB,CAAP,EAAU;AACN,eAAO,EAAP;AACH;AACJ,KAbe,CAAhB;AAcH;AACD;AACJ;AACA;AACA;;;AACmB,SAARwB,QAAQ,CAACF,IAAD,EAAO;AAClB,QAAI,OAAOA,IAAP,KAAgB,QAApB,EACI,MAAM,IAAIR,KAAJ,CAAW,6CAA4C,OAAOQ,IAAK,IAAnE,CAAN;AACJ,WAAOX,OAAO,CAACc,IAAR,CAAaH,IAAb,CAAP;AACH;;AAhCM;;AAkCXd,OAAO,CAACW,OAAR,GAAkBP,IAAlB","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst node_fetch_1 = require(\"node-fetch\");\r\nconst cheerio = require(\"cheerio\");\r\nclass Util {\r\n    constructor() {\r\n        throw new Error(`The ${this.constructor.name} class may not be instantiated!`);\r\n    }\r\n    /**\r\n     * Parse html of the given url\r\n     * @param url Website url to parse html from\r\n     */\r\n    static getHTML(url) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (typeof url !== \"string\")\r\n                throw new Error(`The url type must be a string, received \"${typeof url}\"!`);\r\n            try {\r\n                const res = yield node_fetch_1.default(url, { redirect: \"manual\" });\r\n                if (res.status !== 200)\r\n                    return \"\";\r\n                const html = yield res.text();\r\n                return html;\r\n            }\r\n            catch (e) {\r\n                return \"\";\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Loads HTML\r\n     * @param html Raw html to load\r\n     */\r\n    static loadHTML(html) {\r\n        if (typeof html !== \"string\")\r\n            throw new Error(`The html type must be a string, received \"${typeof html}\"!`);\r\n        return cheerio.load(html);\r\n    }\r\n}\r\nexports.default = Util;\r\n"]},"metadata":{},"sourceType":"script"}