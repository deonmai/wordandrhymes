{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:/Users/deonm/Documents/UNI/React/random-word-gen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/deonm/Documents/UNI/React/random-word-gen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"C:/Users/deonm/Documents/UNI/React/random-word-gen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:/Users/deonm/Documents/UNI/React/random-word-gen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:/Users/deonm/Documents/UNI/React/random-word-gen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/deonm/Documents/UNI/React/random-word-gen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar ErrorReportingMixinBase = require('./mixin-base');\n\nvar PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\n\nvar Mixin = require('../../utils/mixin');\n\nvar ErrorReportingPreprocessorMixin = /*#__PURE__*/function (_ErrorReportingMixinB) {\n  _inherits(ErrorReportingPreprocessorMixin, _ErrorReportingMixinB);\n\n  var _super = _createSuper(ErrorReportingPreprocessorMixin);\n\n  function ErrorReportingPreprocessorMixin(preprocessor, opts) {\n    var _this;\n\n    _classCallCheck(this, ErrorReportingPreprocessorMixin);\n\n    _this = _super.call(this, preprocessor, opts);\n    _this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin);\n    _this.lastErrOffset = -1;\n    return _this;\n  }\n\n  _createClass(ErrorReportingPreprocessorMixin, [{\n    key: \"_reportError\",\n    value: function _reportError(code) {\n      //NOTE: avoid reporting error twice on advance/retreat\n      if (this.lastErrOffset !== this.posTracker.offset) {\n        this.lastErrOffset = this.posTracker.offset;\n\n        _get(_getPrototypeOf(ErrorReportingPreprocessorMixin.prototype), \"_reportError\", this).call(this, code);\n      }\n    }\n  }]);\n\n  return ErrorReportingPreprocessorMixin;\n}(ErrorReportingMixinBase);\n\nmodule.exports = ErrorReportingPreprocessorMixin;","map":{"version":3,"sources":["C:/Users/deonm/Documents/UNI/React/random-word-gen/node_modules/parse5/lib/extensions/error-reporting/preprocessor-mixin.js"],"names":["ErrorReportingMixinBase","require","PositionTrackingPreprocessorMixin","Mixin","ErrorReportingPreprocessorMixin","preprocessor","opts","posTracker","install","lastErrOffset","code","offset","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAMA,uBAAuB,GAAGC,OAAO,CAAC,cAAD,CAAvC;;AACA,IAAMC,iCAAiC,GAAGD,OAAO,CAAC,yCAAD,CAAjD;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,mBAAD,CAArB;;IAEMG,+B;;;;;AACF,2CAAYC,YAAZ,EAA0BC,IAA1B,EAAgC;AAAA;;AAAA;;AAC5B,8BAAMD,YAAN,EAAoBC,IAApB;AAEA,UAAKC,UAAL,GAAkBJ,KAAK,CAACK,OAAN,CAAcH,YAAd,EAA4BH,iCAA5B,CAAlB;AACA,UAAKO,aAAL,GAAqB,CAAC,CAAtB;AAJ4B;AAK/B;;;;WAED,sBAAaC,IAAb,EAAmB;AACf;AACA,UAAI,KAAKD,aAAL,KAAuB,KAAKF,UAAL,CAAgBI,MAA3C,EAAmD;AAC/C,aAAKF,aAAL,GAAqB,KAAKF,UAAL,CAAgBI,MAArC;;AACA,0GAAmBD,IAAnB;AACH;AACJ;;;;EAdyCV,uB;;AAiB9CY,MAAM,CAACC,OAAP,GAAiBT,+BAAjB","sourcesContent":["'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingPreprocessorMixin extends ErrorReportingMixinBase {\n    constructor(preprocessor, opts) {\n        super(preprocessor, opts);\n\n        this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin);\n        this.lastErrOffset = -1;\n    }\n\n    _reportError(code) {\n        //NOTE: avoid reporting error twice on advance/retreat\n        if (this.lastErrOffset !== this.posTracker.offset) {\n            this.lastErrOffset = this.posTracker.offset;\n            super._reportError(code);\n        }\n    }\n}\n\nmodule.exports = ErrorReportingPreprocessorMixin;\n"]},"metadata":{},"sourceType":"script"}