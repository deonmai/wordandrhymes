{"ast":null,"code":"module.exports = Hash;\n\nvar Traverse = require('traverse');\n\nfunction Hash(hash, xs) {\n  if (Array.isArray(hash) && Array.isArray(xs)) {\n    var to = Math.min(hash.length, xs.length);\n    var acc = {};\n\n    for (var i = 0; i < to; i++) {\n      acc[hash[i]] = xs[i];\n    }\n\n    return Hash(acc);\n  }\n\n  if (hash === undefined) return Hash({});\n  var self = {\n    map: function (f) {\n      var acc = {\n        __proto__: hash.__proto__\n      };\n      Object.keys(hash).forEach(function (key) {\n        acc[key] = f.call(self, hash[key], key);\n      });\n      return Hash(acc);\n    },\n    forEach: function (f) {\n      Object.keys(hash).forEach(function (key) {\n        f.call(self, hash[key], key);\n      });\n      return self;\n    },\n    filter: function (f) {\n      var acc = {\n        __proto__: hash.__proto__\n      };\n      Object.keys(hash).forEach(function (key) {\n        if (f.call(self, hash[key], key)) {\n          acc[key] = hash[key];\n        }\n      });\n      return Hash(acc);\n    },\n    detect: function (f) {\n      for (var key in hash) {\n        if (f.call(self, hash[key], key)) {\n          return hash[key];\n        }\n      }\n\n      return undefined;\n    },\n    reduce: function (f, acc) {\n      var keys = Object.keys(hash);\n      if (acc === undefined) acc = keys.shift();\n      keys.forEach(function (key) {\n        acc = f.call(self, acc, hash[key], key);\n      });\n      return acc;\n    },\n    some: function (f) {\n      for (var key in hash) {\n        if (f.call(self, hash[key], key)) return true;\n      }\n\n      return false;\n    },\n    update: function (obj) {\n      if (arguments.length > 1) {\n        self.updateAll([].slice.call(arguments));\n      } else {\n        Object.keys(obj).forEach(function (key) {\n          hash[key] = obj[key];\n        });\n      }\n\n      return self;\n    },\n    updateAll: function (xs) {\n      xs.filter(Boolean).forEach(function (x) {\n        self.update(x);\n      });\n      return self;\n    },\n    merge: function (obj) {\n      if (arguments.length > 1) {\n        return self.copy.updateAll([].slice.call(arguments));\n      } else {\n        return self.copy.update(obj);\n      }\n    },\n    mergeAll: function (xs) {\n      return self.copy.updateAll(xs);\n    },\n    has: function (key) {\n      // only operates on enumerables\n      return Array.isArray(key) ? key.every(function (k) {\n        return self.has(k);\n      }) : self.keys.indexOf(key.toString()) >= 0;\n    },\n    valuesAt: function (keys) {\n      return Array.isArray(keys) ? keys.map(function (key) {\n        return hash[key];\n      }) : hash[keys];\n    },\n    tap: function (f) {\n      f.call(self, hash);\n      return self;\n    },\n    extract: function (keys) {\n      var acc = {};\n      keys.forEach(function (key) {\n        acc[key] = hash[key];\n      });\n      return Hash(acc);\n    },\n    exclude: function (keys) {\n      return self.filter(function (_, key) {\n        return keys.indexOf(key) < 0;\n      });\n    },\n    end: hash,\n    items: hash\n  };\n  var props = {\n    keys: function () {\n      return Object.keys(hash);\n    },\n    values: function () {\n      return Object.keys(hash).map(function (key) {\n        return hash[key];\n      });\n    },\n    compact: function () {\n      return self.filter(function (x) {\n        return x !== undefined;\n      });\n    },\n    clone: function () {\n      return Hash(Hash.clone(hash));\n    },\n    copy: function () {\n      return Hash(Hash.copy(hash));\n    },\n    length: function () {\n      return Object.keys(hash).length;\n    },\n    size: function () {\n      return self.length;\n    }\n  };\n\n  if (Object.defineProperty) {\n    // es5-shim has an Object.defineProperty but it throws for getters\n    try {\n      for (var key in props) {\n        Object.defineProperty(self, key, {\n          get: props[key]\n        });\n      }\n    } catch (err) {\n      for (var key in props) {\n        if (key !== 'clone' && key !== 'copy' && key !== 'compact') {\n          // ^ those keys use Hash() so can't call them without\n          // a stack overflow\n          self[key] = props[key]();\n        }\n      }\n    }\n  } else if (self.__defineGetter__) {\n    for (var key in props) {\n      self.__defineGetter__(key, props[key]);\n    }\n  } else {\n    // non-lazy version for browsers that suck >_<\n    for (var key in props) {\n      self[key] = props[key]();\n    }\n  }\n\n  return self;\n}\n\n; // deep copy\n\nHash.clone = function (ref) {\n  return Traverse.clone(ref);\n}; // shallow copy\n\n\nHash.copy = function (ref) {\n  var hash = {\n    __proto__: ref.__proto__\n  };\n  Object.keys(ref).forEach(function (key) {\n    hash[key] = ref[key];\n  });\n  return hash;\n};\n\nHash.map = function (ref, f) {\n  return Hash(ref).map(f).items;\n};\n\nHash.forEach = function (ref, f) {\n  Hash(ref).forEach(f);\n};\n\nHash.filter = function (ref, f) {\n  return Hash(ref).filter(f).items;\n};\n\nHash.detect = function (ref, f) {\n  return Hash(ref).detect(f);\n};\n\nHash.reduce = function (ref, f, acc) {\n  return Hash(ref).reduce(f, acc);\n};\n\nHash.some = function (ref, f) {\n  return Hash(ref).some(f);\n};\n\nHash.update = function (a\n/*, b, c, ... */\n) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  var hash = Hash(a);\n  return hash.update.apply(hash, args).items;\n};\n\nHash.merge = function (a\n/*, b, c, ... */\n) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  var hash = Hash(a);\n  return hash.merge.apply(hash, args).items;\n};\n\nHash.has = function (ref, key) {\n  return Hash(ref).has(key);\n};\n\nHash.valuesAt = function (ref, keys) {\n  return Hash(ref).valuesAt(keys);\n};\n\nHash.tap = function (ref, f) {\n  return Hash(ref).tap(f).items;\n};\n\nHash.extract = function (ref, keys) {\n  return Hash(ref).extract(keys).items;\n};\n\nHash.exclude = function (ref, keys) {\n  return Hash(ref).exclude(keys).items;\n};\n\nHash.concat = function (xs) {\n  var hash = Hash({});\n  xs.forEach(function (x) {\n    hash.update(x);\n  });\n  return hash.items;\n};\n\nHash.zip = function (xs, ys) {\n  return Hash(xs, ys).items;\n}; // .length is already defined for function prototypes\n\n\nHash.size = function (ref) {\n  return Hash(ref).size;\n};\n\nHash.compact = function (ref) {\n  return Hash(ref).compact.items;\n};","map":{"version":3,"sources":["C:/Users/deonm/Documents/UNI/React/random-word-gen/node_modules/hashish/index.js"],"names":["module","exports","Hash","Traverse","require","hash","xs","Array","isArray","to","Math","min","length","acc","i","undefined","self","map","f","__proto__","Object","keys","forEach","key","call","filter","detect","reduce","shift","some","update","obj","arguments","updateAll","slice","Boolean","x","merge","copy","mergeAll","has","every","k","indexOf","toString","valuesAt","tap","extract","exclude","_","end","items","props","values","compact","clone","size","defineProperty","get","err","__defineGetter__","ref","a","args","prototype","apply","concat","zip","ys"],"mappings":"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","sourcesContent":["module.exports = Hash;\nvar Traverse = require('traverse');\n\nfunction Hash (hash, xs) {\n    if (Array.isArray(hash) && Array.isArray(xs)) {\n        var to = Math.min(hash.length, xs.length);\n        var acc = {};\n        for (var i = 0; i < to; i++) {\n            acc[hash[i]] = xs[i];\n        }\n        return Hash(acc);\n    }\n    \n    if (hash === undefined) return Hash({});\n    \n    var self = {\n        map : function (f) {\n            var acc = { __proto__ : hash.__proto__ };\n            Object.keys(hash).forEach(function (key) {\n                acc[key] = f.call(self, hash[key], key);\n            });\n            return Hash(acc);\n        },\n        forEach : function (f) {\n            Object.keys(hash).forEach(function (key) {\n                f.call(self, hash[key], key);\n            });\n            return self;\n        },\n        filter : function (f) {\n            var acc = { __proto__ : hash.__proto__ };\n            Object.keys(hash).forEach(function (key) {\n                if (f.call(self, hash[key], key)) {\n                    acc[key] = hash[key];\n                }\n            });\n            return Hash(acc);\n        },\n        detect : function (f) {\n            for (var key in hash) {\n                if (f.call(self, hash[key], key)) {\n                    return hash[key];\n                }\n            }\n            return undefined;\n        },\n        reduce : function (f, acc) {\n            var keys = Object.keys(hash);\n            if (acc === undefined) acc = keys.shift();\n            keys.forEach(function (key) {\n                acc = f.call(self, acc, hash[key], key);\n            });\n            return acc;\n        },\n        some : function (f) {\n            for (var key in hash) {\n                if (f.call(self, hash[key], key)) return true;\n            }\n            return false;\n        },\n        update : function (obj) {\n            if (arguments.length > 1) {\n                self.updateAll([].slice.call(arguments));\n            }\n            else {\n                Object.keys(obj).forEach(function (key) {\n                    hash[key] = obj[key];\n                });\n            }\n            return self;\n        },\n        updateAll : function (xs) {\n            xs.filter(Boolean).forEach(function (x) {\n                self.update(x);\n            });\n            return self;\n        },\n        merge : function (obj) {\n            if (arguments.length > 1) {\n                return self.copy.updateAll([].slice.call(arguments));\n            }\n            else {\n                return self.copy.update(obj);\n            }\n        },\n        mergeAll : function (xs) {\n            return self.copy.updateAll(xs);\n        },\n        has : function (key) { // only operates on enumerables\n            return Array.isArray(key)\n                ? key.every(function (k) { return self.has(k) })\n                : self.keys.indexOf(key.toString()) >= 0;\n        },\n        valuesAt : function (keys) {\n            return Array.isArray(keys)\n                ? keys.map(function (key) { return hash[key] })\n                : hash[keys]\n            ;\n        },\n        tap : function (f) {\n            f.call(self, hash);\n            return self;\n        },\n        extract : function (keys) {\n            var acc = {};\n            keys.forEach(function (key) {\n                acc[key] = hash[key];\n            });\n            return Hash(acc);\n        },\n        exclude : function (keys) {\n            return self.filter(function (_, key) {\n                return keys.indexOf(key) < 0\n            });\n        },\n        end : hash,\n        items : hash\n    };\n    \n    var props = {\n        keys : function () { return Object.keys(hash) },\n        values : function () {\n            return Object.keys(hash).map(function (key) { return hash[key] });\n        },\n        compact : function () {\n            return self.filter(function (x) { return x !== undefined });\n        },\n        clone : function () { return Hash(Hash.clone(hash)) },\n        copy : function () { return Hash(Hash.copy(hash)) },\n        length : function () { return Object.keys(hash).length },\n        size : function () { return self.length }\n    };\n    \n    if (Object.defineProperty) {\n        // es5-shim has an Object.defineProperty but it throws for getters\n        try {\n            for (var key in props) {\n                Object.defineProperty(self, key, { get : props[key] });\n            }\n        }\n        catch (err) {\n            for (var key in props) {\n                if (key !== 'clone' && key !== 'copy' && key !== 'compact') {\n                    // ^ those keys use Hash() so can't call them without\n                    // a stack overflow\n                    self[key] = props[key]();\n                }\n            }\n        }\n    }\n    else if (self.__defineGetter__) {\n        for (var key in props) {\n            self.__defineGetter__(key, props[key]);\n        }\n    }\n    else {\n        // non-lazy version for browsers that suck >_<\n        for (var key in props) {\n            self[key] = props[key]();\n        }\n    }\n    \n    return self;\n};\n\n// deep copy\nHash.clone = function (ref) {\n    return Traverse.clone(ref);\n};\n\n// shallow copy\nHash.copy = function (ref) {\n    var hash = { __proto__ : ref.__proto__ };\n    Object.keys(ref).forEach(function (key) {\n        hash[key] = ref[key];\n    });\n    return hash;\n};\n\nHash.map = function (ref, f) {\n    return Hash(ref).map(f).items;\n};\n\nHash.forEach = function (ref, f) {\n    Hash(ref).forEach(f);\n};\n\nHash.filter = function (ref, f) {\n    return Hash(ref).filter(f).items;\n};\n\nHash.detect = function (ref, f) {\n    return Hash(ref).detect(f);\n};\n\nHash.reduce = function (ref, f, acc) {\n    return Hash(ref).reduce(f, acc);\n};\n\nHash.some = function (ref, f) {\n    return Hash(ref).some(f);\n};\n\nHash.update = function (a /*, b, c, ... */) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    var hash = Hash(a);\n    return hash.update.apply(hash, args).items;\n};\n\nHash.merge = function (a /*, b, c, ... */) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    var hash = Hash(a);\n    return hash.merge.apply(hash, args).items;\n};\n\nHash.has = function (ref, key) {\n    return Hash(ref).has(key);\n};\n\nHash.valuesAt = function (ref, keys) {\n    return Hash(ref).valuesAt(keys);\n};\n\nHash.tap = function (ref, f) {\n    return Hash(ref).tap(f).items;\n};\n\nHash.extract = function (ref, keys) {\n    return Hash(ref).extract(keys).items;\n};\n\nHash.exclude = function (ref, keys) {\n    return Hash(ref).exclude(keys).items;\n};\n\nHash.concat = function (xs) {\n    var hash = Hash({});\n    xs.forEach(function (x) { hash.update(x) });\n    return hash.items;\n};\n\nHash.zip = function (xs, ys) {\n    return Hash(xs, ys).items;\n};\n\n// .length is already defined for function prototypes\nHash.size = function (ref) {\n    return Hash(ref).size;\n};\n\nHash.compact = function (ref) {\n    return Hash(ref).compact.items;\n};\n"]},"metadata":{},"sourceType":"script"}