{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deonm\\\\Documents\\\\UNI\\\\React\\\\random-word-gen\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport Header from './components/Header';\nimport Button from './components/Button';\nimport Word from './components/Word';\nimport LastThree from './components/LastThree';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var randomWords = require('random-words'); // var wd = require(\"word-definition\");\n\n\n  var rhyme = require('rhymes');\n\n  const [currentWord, setWord] = useState(\"\");\n  const [rhymes, setRhymes] = useState([]);\n\n  const generateWord = async () => {\n    var new_word = await randomWords();\n    new_word = new_word.toUpperCase();\n    setWord(new_word);\n    getRhymes(new_word);\n  };\n\n  const randomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min);\n  };\n\n  const getRhymes = word => {\n    // wd.getDef(word, \"en\", null, (def) => {\n    //   console.log(def)\n    // })\n    var rhyme_list = rhyme(word);\n    console.log(rhyme_list);\n    var new_rhymes = [];\n\n    for (var i = 0; i < 3; i++) {\n      var randInt = randomInt(0, rhyme_list.length + 1);\n      var rh = rhyme_list[randInt]['word'];\n\n      if (new_rhymes.includes(rh)) {\n        i -= 1;\n      } else {\n        new_rhymes.unshift(rh);\n      }\n    }\n\n    console.log(new_rhymes);\n    setRhymes(new_rhymes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      className: \"head\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      class: \"btn\",\n      text: \"Let's Go!\",\n      onClick: generateWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Word, {\n      word: currentWord,\n      class: \"wrd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LastThree, {\n      lastThree: rhymes,\n      class: \"subwrds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"IReBhYUtE9uqPq+MxJBZRXAMpvc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/deonm/Documents/UNI/React/random-word-gen/src/App.js"],"names":["useState","Header","Button","Word","LastThree","App","randomWords","require","rhyme","currentWord","setWord","rhymes","setRhymes","generateWord","new_word","toUpperCase","getRhymes","randomInt","min","max","Math","ceil","floor","random","word","rhyme_list","console","log","new_rhymes","i","randInt","length","rh","includes","unshift"],"mappings":";;;AAAA;AACA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAIC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAAzB,CADa,CAEb;;;AACA,MAAIC,KAAK,GAAGD,OAAO,CAAC,QAAD,CAAnB;;AAEA,QAAM,CAACE,WAAD,EAAcC,OAAd,IAAyBV,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMa,YAAY,GAAG,YAAY;AAC/B,QAAIC,QAAQ,GAAG,MAAMR,WAAW,EAAhC;AACAQ,IAAAA,QAAQ,GAAGA,QAAQ,CAACC,WAAT,EAAX;AACAL,IAAAA,OAAO,CAACI,QAAD,CAAP;AACAE,IAAAA,SAAS,CAACF,QAAD,CAAT;AACD,GALD;;AAOA,QAAMG,SAAS,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC9BD,IAAAA,GAAG,GAAGE,IAAI,CAACC,IAAL,CAAUH,GAAV,CAAN;AACAC,IAAAA,GAAG,GAAGC,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAN;AACA,WAAOC,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiBJ,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAAP;AACD,GAJD;;AAMA,QAAMF,SAAS,GAAIQ,IAAD,IAAU;AAC1B;AACA;AACA;AACA,QAAIC,UAAU,GAAGjB,KAAK,CAACgB,IAAD,CAAtB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,QAAIG,UAAU,GAAG,EAAjB;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA2B;AACzB,UAAIC,OAAO,GAAGb,SAAS,CAAC,CAAD,EAAIQ,UAAU,CAACM,MAAX,GAAoB,CAAxB,CAAvB;AACA,UAAIC,EAAE,GAAGP,UAAU,CAACK,OAAD,CAAV,CAAoB,MAApB,CAAT;;AACA,UAAIF,UAAU,CAACK,QAAX,CAAoBD,EAApB,CAAJ,EAA6B;AAC3BH,QAAAA,CAAC,IAAI,CAAL;AACD,OAFD,MAEO;AACLD,QAAAA,UAAU,CAACM,OAAX,CAAmBF,EAAnB;AACD;AACF;;AAEDN,IAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACAhB,IAAAA,SAAS,CAACgB,UAAD,CAAT;AACD,GApBD;;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAG;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAG,KAAhB;AAAsB,MAAA,IAAI,EAAG,WAA7B;AAAyC,MAAA,OAAO,EAAIf;AAApD;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAIJ,WAAd;AAA2B,MAAA,KAAK,EAAG;AAAnC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAIE,MAAxB;AAAgC,MAAA,KAAK,EAAG;AAAxC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GArDQN,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react'\nimport Header from './components/Header'\nimport Button from './components/Button'\nimport Word from './components/Word'\nimport LastThree from './components/LastThree'\n\nfunction App() {\n  var randomWords = require('random-words');\n  // var wd = require(\"word-definition\");\n  var rhyme = require('rhymes');\n\n  const [currentWord, setWord] = useState(\"\");\n  const [rhymes, setRhymes] = useState([])\n\n  const generateWord = async () => {\n    var new_word = await randomWords();\n    new_word = new_word.toUpperCase();\n    setWord(new_word);\n    getRhymes(new_word);\n  }\n\n  const randomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  const getRhymes = (word) => {\n    // wd.getDef(word, \"en\", null, (def) => {\n    //   console.log(def)\n    // })\n    var rhyme_list = rhyme(word);\n    console.log(rhyme_list)\n    var new_rhymes = [];\n\n    for(var i = 0; i < 3; i++) {\n      var randInt = randomInt(0, rhyme_list.length + 1)\n      var rh = rhyme_list[randInt]['word']\n      if (new_rhymes.includes(rh)) {\n        i -= 1;\n      } else {\n        new_rhymes.unshift(rh)\n      }\n    }\n\n    console.log(new_rhymes);\n    setRhymes(new_rhymes);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header className = \"head\"/>\n      <Button class = \"btn\" text = \"Let's Go!\" onClick = {generateWord}/>\n\n      <Word word = {currentWord} class = \"wrd\"/>\n      <LastThree lastThree = {rhymes} class = \"subwrds\"/>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}