{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deonm\\\\Documents\\\\UNI\\\\React\\\\random-word-gen\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Button from './components/Button';\nimport Word from './components/Word';\nimport Rhymes from './components/Rhymes';\nimport Footer from './components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var randomWords = require('random-words'); // var wd = require(\"word-definition\");\n\n\n  var rhyme = require('rhymes');\n\n  const [currentWord, setWord] = useState(\"CLICK\");\n  const [rhymes, setRhymes] = useState([\"FOR\", \"YOUR\", \"WORD\"]);\n\n  const generateWord = async () => {\n    var new_word = await randomWords();\n    new_word = new_word.toUpperCase();\n    console.log(new_word);\n    setWord(new_word);\n    getRhymes(new_word);\n  };\n\n  const randomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min);\n  };\n\n  const getRhymes = word => {\n    // wd.getDef(word, \"en\", null, (def) => {\n    //   console.log(def)\n    // })\n    var rhyme_list = rhyme(word);\n    var new_rhymes = [];\n\n    if (rhyme_list.length < 1) {\n      setRhymes([\"No rhymes in database D:\"]);\n      return;\n    } else if (rhyme_list.length < 3) {\n      rhyme_list.forEach(item => {\n        new_rhymes.unshift(item['word'].toUpperCase());\n      });\n    } else {\n      for (var i = 0; i < 3; i++) {\n        var randInt = randomInt(1, rhyme_list.length);\n        var lastWord = \"\";\n        var rh = rhyme_list[randInt]['word'].toUpperCase();\n\n        if (new_rhymes.includes(rh) || lastWord.charAt(0) === rh.charAt(0) || rh === currentWord) {\n          i -= 1;\n          lastWord = \"\";\n        } else {\n          new_rhymes.unshift(rh);\n          lastWord = rh;\n        }\n      }\n    }\n\n    setRhymes(new_rhymes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        className: \"head\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        render: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn\",\n            text: \"Let's Go!\",\n            onClick: generateWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Word, {\n            word: currentWord,\n            class: \"wrd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Rhymes, {\n            rhymes: rhymes,\n            class: \"subwrds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ElEw6BA2vHzo4TPpjBvskqFjnAE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/deonm/Documents/UNI/React/random-word-gen/src/App.js"],"names":["useState","BrowserRouter","Router","Route","Header","Button","Word","Rhymes","Footer","App","randomWords","require","rhyme","currentWord","setWord","rhymes","setRhymes","generateWord","new_word","toUpperCase","console","log","getRhymes","randomInt","min","max","Math","ceil","floor","random","word","rhyme_list","new_rhymes","length","forEach","item","unshift","i","randInt","lastWord","rh","includes","charAt","props"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Button from './components/Button'\nimport Word from './components/Word'\nimport Rhymes from './components/Rhymes'\nimport Footer from './components/Footer'\n\nfunction App() {\n  var randomWords = require('random-words');\n  // var wd = require(\"word-definition\");\n  var rhyme = require('rhymes');\n\n  const [currentWord, setWord] = useState(\"CLICK\");\n  const [rhymes, setRhymes] = useState([\"FOR\", \"YOUR\", \"WORD\"])\n\n  const generateWord = async () => {\n    var new_word = await randomWords();\n    new_word = new_word.toUpperCase();\n    console.log(new_word);\n    setWord(new_word);\n    getRhymes(new_word);\n  }\n\n  const randomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  const getRhymes = (word) => {\n    // wd.getDef(word, \"en\", null, (def) => {\n    //   console.log(def)\n    // })\n\n    var rhyme_list = rhyme(word);\n    var new_rhymes = [];\n\n    if (rhyme_list.length < 1) {\n      setRhymes([\"No rhymes in database D:\"])\n      return;\n    }\n    else if (rhyme_list.length < 3) {\n      rhyme_list.forEach(item => {\n        new_rhymes.unshift(item['word'].toUpperCase())\n      })\n    }\n    else {\n      for(var i = 0; i < 3; i++) {\n        var randInt = randomInt(1, rhyme_list.length)\n        var lastWord = \"\";\n        var rh = rhyme_list[randInt]['word'].toUpperCase()\n\n        if (new_rhymes.includes(rh) || lastWord.charAt(0) === rh.charAt(0) || rh === currentWord) {\n          i -= 1;\n          lastWord = \"\";\n        } else {\n          new_rhymes.unshift(rh)\n          lastWord = rh\n        }\n      }\n    }\n\n    setRhymes(new_rhymes);\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header className = \"head\"/>\n\n        <Route path = '/' exact render = {(props) => (\n          <>\n            <Button class = \"btn\" text = \"Let's Go!\" onClick = {generateWord}/>\n\n            <Word word = {currentWord} class = \"wrd\"/>\n            <Rhymes rhymes = {rhymes} class = \"subwrds\"/>\n          </>\n        )} />\n\n        \n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}