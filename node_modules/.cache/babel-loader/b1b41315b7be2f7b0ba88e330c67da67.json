{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/deonm/Documents/UNI/React/random-word-gen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/deonm/Documents/UNI/React/random-word-gen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/deonm/Documents/UNI/React/random-word-gen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import{useState}from'react';import{BrowserRouter as Router,Route}from'react-router-dom';import Header from'./components/Header';import Button from'./components/Button';import Word from'./components/Word';import Rhymes from'./components/Rhymes';import Footer from'./components/Footer';import About from'./components/About';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var randomWords=require('random-words');var rhyme=require('rhymes');var _useState=useState(\"CLICK\"),_useState2=_slicedToArray(_useState,2),currentWord=_useState2[0],setWord=_useState2[1];var _useState3=useState([\"FOR\",\"YOUR\",\"WORD\"]),_useState4=_slicedToArray(_useState3,2),rhymes=_useState4[0],setRhymes=_useState4[1];var generateWord=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var new_word;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return randomWords();case 2:new_word=_context.sent;new_word=new_word.toUpperCase();console.log(new_word);setWord(new_word);getRhymes(new_word);case 7:case\"end\":return _context.stop();}}},_callee);}));return function generateWord(){return _ref.apply(this,arguments);};}();var randomInt=function randomInt(min,max){min=Math.ceil(min);max=Math.floor(max);return Math.floor(Math.random()*(max-min)+min);};var getRhymes=function getRhymes(word){var rhyme_list=rhyme(word);var new_rhymes=[];if(rhyme_list.length<1){setRhymes([\"No rhymes in database D:\"]);return;}else if(rhyme_list.length<3){rhyme_list.forEach(function(item){new_rhymes.unshift(item['word'].toUpperCase());});}else{for(var i=0;i<3;i++){var randInt=randomInt(1,rhyme_list.length);var lastWord=\"\";var rh=rhyme_list[randInt]['word'].toUpperCase();if(new_rhymes.includes(rh)||lastWord.charAt(0)===rh.charAt(0)||rh===word){i-=1;lastWord=\"\";}else{new_rhymes.unshift(rh);lastWord=rh;}}}setRhymes(new_rhymes);};return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{className:\"head\"}),/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,render:function render(props){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{class:\"btn\",divName:\"btndiv\",text:\"Let's Go!\",onClick:generateWord}),/*#__PURE__*/_jsx(Word,{word:currentWord,class:\"wrd\"}),/*#__PURE__*/_jsx(Rhymes,{rhymes:rhymes,class:\"subwrds\"}),/*#__PURE__*/_jsx(Footer,{})]});}}),/*#__PURE__*/_jsx(Route,{path:\"/about\",exact:true,component:About})]})});}export default App;","map":{"version":3,"sources":["C:/Users/deonm/Documents/UNI/React/random-word-gen/src/App.js"],"names":["useState","BrowserRouter","Router","Route","Header","Button","Word","Rhymes","Footer","About","App","randomWords","require","rhyme","currentWord","setWord","rhymes","setRhymes","generateWord","new_word","toUpperCase","console","log","getRhymes","randomInt","min","max","Math","ceil","floor","random","word","rhyme_list","new_rhymes","length","forEach","item","unshift","i","randInt","lastWord","rh","includes","charAt","props"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Button from './components/Button'\nimport Word from './components/Word'\nimport Rhymes from './components/Rhymes'\nimport Footer from './components/Footer'\nimport About from './components/About'\n\nfunction App() {\n  var randomWords = require('random-words');\n  var rhyme = require('rhymes');\n\n  const [currentWord, setWord] = useState(\"CLICK\");\n  const [rhymes, setRhymes] = useState([\"FOR\", \"YOUR\", \"WORD\"])\n\n  const generateWord = async () => {\n    var new_word = await randomWords();\n    new_word = new_word.toUpperCase();\n    console.log(new_word);\n\n    setWord(new_word);\n    getRhymes(new_word);\n  }\n\n  const randomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  const getRhymes = (word) => {\n    var rhyme_list = rhyme(word);\n    var new_rhymes = [];\n\n    if (rhyme_list.length < 1) {\n      setRhymes([\"No rhymes in database D:\"])\n      return;\n    }\n    else if (rhyme_list.length < 3) {\n      rhyme_list.forEach(item => {\n        new_rhymes.unshift(item['word'].toUpperCase())\n      })\n    }\n    else {\n      for(var i = 0; i < 3; i++) {\n        var randInt = randomInt(1, rhyme_list.length)\n        var lastWord = \"\";\n        var rh = rhyme_list[randInt]['word'].toUpperCase()\n\n        if (new_rhymes.includes(rh) || lastWord.charAt(0) === rh.charAt(0) || rh === word) {\n          i -= 1;\n          lastWord = \"\";\n        } else {\n          new_rhymes.unshift(rh)\n          lastWord = rh\n        }\n      }\n    }\n\n    setRhymes(new_rhymes);\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header className = \"head\"/>\n\n        <Route path = '/' exact render = {(props) => (\n          <>\n            <Button class = \"btn\" divName = 'btndiv' text = \"Let's Go!\" onClick = {generateWord}/>\n\n            <Word word = {currentWord} class = \"wrd\"/>\n            <Rhymes rhymes = {rhymes} class = \"subwrds\"/>\n            <Footer />\n          </>\n        )} />\n\n        <Route path = '/about' exact component = {About} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}